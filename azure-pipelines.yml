# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master
- main
- develop
- feature/*
- bugfix/*
- hotfix/*

pool:
  name: 'Demo'

variables:
  config: 'Release'

stages:
- stage: 'Build'
  jobs:
  - job: 'BuildClient'
    steps:  
    - task: Npm@1
      displayName: 'Install Client Dependencies'
      inputs:
        command: 'install'
        workingDir: 'ClientApp'
    
    - task: Npm@1
      displayName: 'Build Client Application'
      inputs:
        command: 'custom'
        workingDir: 'ClientApp'
        customCommand: 'run build --prod'

    # - task: Npm@1
    #   displayName: 'Test Client Application'
    #   inputs:
    #     command: 'custom'
    #     workingDir: 'ClientApp'
    #     customCommand: 'run test --watch=false'


  - job: 'BuildDotnet'
    # pool: 
    #  name: 'Demo'
    steps:  
    - script: dotnet build --configuration $(config)
      displayName: 'dotnet build $(config)'

    - script: echo 'Hello World'
      displayName: 'dotnet build $(config)'
   
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration  $(config)  --output $(build.ArtifactStagingDirectory)/$(config)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: 'DeployDev'
  displayName: 'Deploy to Dev'
  variables: 
    appName: 'bermtecdev'
  jobs:
  - deployment: 'Dev'
    pool:
      name: Demo
    environment: 'Dev'
    strategy: 
       runOnce:     
        deploy:
          steps:
           - task: AzureRmWebAppDeployment@4
             inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure Connection'
              appType: 'webAppLinux'
              WebAppName: $(appName)
              packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'

- stage: 'DeployTest'
  displayName: 'Deploy to Test'
  condition: and(succeeded(), eq(variables.isMain, 'true'))
  variables: 
    appName: 'AS3KTest'
  jobs:
  - deployment: 'Test'
    pool:
      name: Demo
    environment: 'Test'
    strategy: 
       runOnce:     
        deploy:
          steps:
           - task: AzureRmWebAppDeployment@4
             displayName: 'Deploy .NET Code to Azure App Service '
             inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure Connection'
              appType: 'webAppLinux'
              WebAppName: $(appName)
              packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
